{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n//У розмітці необхідно буде обгорнути кожну картку зображення в посилання, як зазначено в документації в секції «Markup».\n//Бібліотека містить метод [refresh()](<https://github.com/andreknieriem/simplelightbox#public-methods>), який обов'язково потрібно викликати щоразу після додавання нових елементів до галереї.\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst hits = {\n    q: \"\", image_type: \"photo\" , orientation: \"horizontal\", safesearch: true, name: \"\"\n   } \n   const API_KEYs = \"44760113-b733d2f51a4c6409aa3483a05\";\n\n   \nconst parameters = {\n  webformatURL: \"\",        \n  largeImageURL: \"\",\n  tags : \"alt\",\n  views: 1,\n  downloads: 1,\n  likes: 1,\n  comments: 1,\n  user_id: 1,\n  user: \"\",\n};\n\nfunction fechPhoto(hits) {\n    return fetch(`https://pixabay.com/api/?key=${API_KEYs}`, parameters ).then(response => { \n        console.log(response); \n        if (!response.ok) {\n          throw new Error(response.status); \n        }\n        return response.json(); // виклкикаеттся на обект, повертае Promes\n      }\n      );\n}\n\nexport {fechPhoto};\n\n\nconst formSearchImage = document.querySelector(\".uzers-form-image\");\nformSearchImage.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(event) {\n // event.preventDefault();\n       const form = event.currentTarget.elements; // посилання на елемент форми\n       const photQueryValue = form.elements.searchQuery.value.toLowerCase().trim(); //значення яке написав користувач\n\n       fechPhoto(photQueryValue) // робимо запит на сервер та отримуємо відповідь\n       .then(creatMarGallery)   // запускаємо функцію яка відмалюовує карточки\n       .catch(fechGallery) \n       //.catch(handlerInput)  // первіряємо на помилки та видаємо повідомлення якщо такого не існує (404) Показати message: `Sorry\n       .finally(() => form.reset()); //очистка данних форми після закінчення промісу(очистка тексту в інпуті)\n};\n\nexport {handlerSearch};\n\nconst galleryContainer = document.querySelector('.gallery'); // створює розмітку для галереї\ngalleryContainer.addEventListener('submit', creatMarGallery);\n   //function creatMarGallery({views, downloads, likes, comments, webformatURL, tags, largeImageURL, hits}) \n   function creatMarGallery(parameters, hits ) \n  {\n    const hitsList = document.parameters;\n    hitsList.map(({image}) =>  \n      ` <div class=\"gallery\">\"${hitsList}\"\n    <li class=\"gallery-item\">\n    <p>${image.views}</p>\n    <p>${image.downloads}</p>\n    <p>${image.likes}</p>\n    <p>${image.comments}</p>\n    <a class=\"gallery-link\" href=\"${image.webformatURL}\">\n    <img class=\"gallery-image\" src=\"${image.orientat}\" alt=\"${image.tags}\" title=\"${image.name}\"/></a>\n    <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n    <img class=\"gallery-image\" src=\"${image.orientat}\" alt=\"\" title=\"${image.tags}\"/></a>\n    </li> \n    </div> ` )\n      .join(\"\").refresh()\n      galleryContainer.innerHTML(\"afterbegin\", creatMarGallery(hitsList));\n     \n  };\n \n  export {creatMarGallery}\n\n// проста функція виклика повідомлення про помилку без перевірки\n\n function fechGallery(error) {\n  iziToast.error({title: 'Error', \n    message: `Sorry, there are no images matching your search query. Please try again!`})\n }\n\n  var lightbox = new SimpleLightbox('.gallery a', { captionDelay: 200, captionsData: 'alt'  });\n\n// initialSelector = null; // закоментований метод нижче refresh() з бібліотеки\n// this.initialSelector = elements;\n// refresh() {\n//   if (!this.initialSelector) {\n//       throw 'refreshing only works when you initialize using a selector!';\n//   }\n//   let options = this.options,\n//       selector = this.initialSelector;\n//   this.destroy();\n//   this.constructor(selector, options);\n//   return this;\n// }\n// export default SimpleLightbox;\n \n// const forms = document.querySelector('.uzers-form-image'); //  функція прослуховує на значення введене Юзером\n// forms.addEventListener('input', handlerInput );\n// function handlerInput(event) {\n//     event.preventDefault();\n// if (!photQueryValue === safesearch) // Показати message: `Sorry, використати приклад якщо не знаходиться така назва в бібліотеці pixabay\n//   {\n//     iziToast.error({\n//         title: 'Error',\n//         message: `Sorry, there are no images matching your search query. Please try again!`\n//     })\n//   }};\n    \n//  export {handlerInput};\n\n\n\n// підключити ще бібліотеку для завантаження спінера(нижче взяв з репозиторію)\n// const main = document.getElementById('main');\n// // Create Spinners \n// LOADERS.forEach((loader, i) => {    \n//     // Append Loader\n//     main.appendChild(createLoader(i));\n    \n// })\n\n\n\n\n\n\n\n\n\n\n","\nimport {getImage} from \"./js/pixabay-api\"\n\nimport {fechPhoto} from \"./js/render-functions\"\nfechPhoto().then(data => console.log(data));\n\n// import {handlerSearch} from \"./js/render-functions\"\n// handlerSearch().then(data => console.log(data));\n\n\nimport {creatMarGallery} from \"./js/render-functions\"\ncreatMarGallery().then(data => console.log(data));\n\n// const refsOutput = {\n//     formS: document.querySelector('.uzers-form-image'),\n//      imGgallery: document.querySelector('.gallery')\n    \n// }\n\n// //formSearchImage.addEventListener('submit', handlerSearch);\n// // refsOutput.formS.addEventListener('submit', handlerSearch);\n\n// refsOutput.formS.addEventListener('submit', handlerSubmit);\n\n// function handlerSubmit(event) {\n//     event.preventDefault();\n//     userRequest = event.target.searchQuery.value.trim()\n//     getImage(userRequest).then(data => console.log(data));\n// }\n"],"names":["API_KEYs","parameters","fechPhoto","hits","response","formSearchImage","handlerSearch","event","form","creatMarGallery","fechGallery","galleryContainer","hitsList","image","error","iziToast","SimpleLightbox","data"],"mappings":"6vBAWG,MAAMA,EAAW,qCAGdC,EAAa,CACjB,aAAc,GACd,cAAe,GACf,KAAO,MACP,MAAO,EACP,UAAW,EACX,MAAO,EACP,SAAU,EACV,QAAS,EACT,KAAM,EACR,EAEA,SAASC,EAAUC,EAAM,CACrB,OAAO,MAAM,gCAAgCH,CAAQ,GAAIC,CAAY,EAAC,KAAKG,GAAY,CAEnF,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACjB,CACP,CACA,CAKA,MAAMC,EAAkB,SAAS,cAAc,mBAAmB,EAClEA,EAAgB,iBAAiB,SAAUC,CAAa,EAExD,SAASA,EAAcC,EAAO,CAEvB,MAAMC,EAAOD,EAAM,cAAc,SACVC,EAAK,SAAS,YAAY,MAAM,YAAW,EAAG,KAAO,EAE5EN,EAAwB,EACvB,KAAKO,CAAe,EACpB,MAAMC,CAAW,EAEjB,QAAQ,IAAMF,EAAK,MAAK,CAAE,CAClC,CAIA,MAAMG,EAAmB,SAAS,cAAc,UAAU,EAC1DA,EAAiB,iBAAiB,SAAUF,CAAe,EAExD,SAASA,EAAgBR,EAAYE,EACtC,CACE,MAAMS,EAAW,SAAS,WAC1BA,EAAS,IAAI,CAAC,CAAC,MAAAC,CAAK,IAClB,0BAA0BD,CAAQ;AAAA;AAAA,SAE/BC,EAAM,KAAK;AAAA,SACXA,EAAM,SAAS;AAAA,SACfA,EAAM,KAAK;AAAA,SACXA,EAAM,QAAQ;AAAA,oCACaA,EAAM,YAAY;AAAA,sCAChBA,EAAM,QAAQ,UAAUA,EAAM,IAAI,YAAYA,EAAM,IAAI;AAAA,oCAC1DA,EAAM,aAAa;AAAA,sCACjBA,EAAM,QAAQ,mBAAmBA,EAAM,IAAI;AAAA;AAAA,YAEnE,EACP,KAAK,EAAE,EAAE,QAAS,EACnBF,EAAiB,UAAU,aAAcF,EAAwB,CAAC,CAKxE,CAGC,SAASC,EAAYI,EAAO,CAC3BC,EAAS,MAAM,CAAC,MAAO,QACrB,QAAS,0EAA0E,CAAC,CACtF,CAEe,IAAIC,EAAe,aAAc,CAAE,aAAc,IAAK,aAAc,MAAQ,ECtF7Fd,EAAW,EAAC,KAAKe,GAAQ,QAAQ,IAAIA,CAAI,CAAC,EAO1CR,EAAiB,EAAC,KAAKQ,GAAQ,QAAQ,IAAIA,CAAI,CAAC"}