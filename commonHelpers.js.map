{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n\n// Список параметрів рядка запиту, які тобі обов'язково необхідно вказати:\n// key — твій унікальний ключ доступу до API.\n// q — слово для пошуку. Те, що буде вводити користувач.\n// image_type — тип зображення. Потрібні тільки фотографії, тому постав значення photo.\n// orientation — орієнтація фотографії. Постав значення horizontal.\n// safesearch — фільтр за віком. Постав значення true.\n\nconst hits = {\n  q: \"\", image_type: \"photo\" , orientation: \"horizontal\", safesearch: true\n}\n\nconst API_KEY = \"44760113-b733d2f51a4c6409aa3483a05\";\n// fetch(`https://pixabay.com/api/?key=${API_KEY}`)\n\nexport function getImage() {\n  return fetch(`https://pixabay.com/api/?key=${API_KEY}&hits=q`).then(response => { \n      console.log(response); // приходить выд серверу в вигл обекта РЕСПОНСresponse\n      if (!response.ok) {\n        throw new Error(response.status); // перевырка в разы помилки 404 щоб пропустила в catch\n      }\n      return response.json(); // виклкикаеттся на обект ы повертае ПРОМiс\n    }\n    );\n    }\n// export {getImage};\n","// //2 task\n// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\n// У файлі main.js напиши всю логіку роботи додатка.\n// Кожне зображення описується об'єктом, з якого тобі цікаві тільки такі властивості:\n//add html:\n// webformatURL — посилання на маленьке зображення для списку карток у галереї\n// largeImageURL — посилання на велике зображення для модального вікна\n// tags — рядок з описом зображення. Підійде для атрибута alt\n// likes — кількість вподобайок\n// views — кількість переглядів\n// comments — кількість коментарів\n// downloads — кількість завантажень\n// Перед пошуком за новим ключовим словом необхідно повністю очищати вміст галереї, щоб не змішувати результати запитів.\n//Якщо бекенд повертає порожній масив, значить, нічого підходящого не було знайдено.\n//  У такому разі показуй повідомлення з текстом\n//  \"Sorry, there are no images matching your search query. Please try again!\".\n //Для повідомлень використовуй бібліотеку iziToast\n// Подивись демовідео роботи застосунку на цьому етапі.\n//У розмітці необхідно буде обгорнути кожну картку зображення в посилання, як зазначено в документації в секції «Markup».\n//Бібліотека містить метод [refresh()](<https://github.com/andreknieriem/simplelightbox#public-methods>), який обов'язково потрібно викликати щоразу після додавання нових елементів до галереї.\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//  import {getImage} from \"./pixabay-api\";\n\nfunction newUrl(str) {\n    const BaSe_URL =\"https://pixabay.com/api/\";\n    const Me_KEY = \"44760113-b733d2f51a4c6409aa3483a05\";\n    const imageType = 'photo';\n    const orientat = \"horizontal\";\n    const safesearch = true;\n    const urlRaqeuestes = `${BaSe_URL}?key=${Me_KEY}&q=${str}&image_type${imageType}&orientation=${orientat}&safesearch=${safesearch}`\n    return fetch(urlRaqeuestes).then(response => { \n        console.log(response); \n        if (!response.ok) {\n          throw new Error(response.status); \n        }\n        return response.json(); // виклкикаеттся на обект, повертае Promes\n      }\n      );}\n// newUrl().then((user) => console.log(user))\n//     .catch((error) => console.log(error));\n    export {newUrl};\n\nconst hitss = {\n    q: \"\", image_type: \"photo\" , orientation: \"horizontal\", safesearch: true\n   } //search query (можливо треба додати цю властивість?)\n  \nfunction fechPhoto(hitss) {\n    return fetch(`https://pixabay.com/api/?key=${newUrl.Me_KEY}&${newUrl.q}`).then(response => { \n        console.log(response); \n        if (!response.ok) {\n          throw new Error(response.status); \n        }\n        return response.json(); // виклкикаеттся на обект, повертае Promes\n      }\n      );\n}\n//fechPhoto(q).then(console.log)\nexport {fechPhoto};\n\nconst formsImage = document.querySelector('.uzers-form-image');\nconst galleryContainer = document.querySelector('.gallery');\nformsImage.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(event) {\n       event.preventDefault();\n       const form = event.currentTarget;\n       const photQueryValue = form.elements.query.value.toLowerCase;\n\n       fechPhoto(photQueryValue)\n       .then(creatMarGallery)\n       .catch(fechGallery)\n}\n\nexport {handlerSearch};\n\n// const parameters = {\n//     webformatURL: \"\",        \n//     largeImageURL: \"\",\n//     tags : \"alt\",\n//     views: 1,\n//     downloads: 1,\n//     likes: 1,\n//     comments: 1,\n// };\n// // 91 TypeError: e.map is not a function\n//     // at f (render-functions.js:91:23)\n//     // at render-functions.js:112:52\n\n  function creatMarGallery({views, downloads, likes, comments, webformatURL, tags, largeImageURL, abilities}) {\n    const abilitiesList = abilities\n    .map((image) =>  `<li class=\"list-group-new\">${image.query}</li>` )\n      .join(\"\");\n     const markupHtml = ` \n    <li class=\"gallery-item\">\n    <p>${image.views}</p>\n    <p>${image.downloads}</p>\n    <p>${image.likes}</p>\n    <p>${image.comments}</p>\n  <a class=\"gallery-link\" href=\"${image.webformatURL}\"><img src=\"${image.orientat}\"\n      class=\"gallery-image\" alt=\"${image.tags}\"/>\n  </a>\n  <a class=\"gallery-link\" href=\"${image.largeImageURL}\"><img src=\"${image.orientat}\"\n      class=\"gallery-image\" alt=\"${image.tags}\"/>\n  </a>\n  <ul class=\"gallery\">\"${abilitiesList}\"</ul> \n</li> `;\ngalleryContainer.innerHTML = markupHtml;\n };\n\n export {creatMarGallery};\n\n function fechGallery(error) {\n  iziToast.error({title: 'Error', \n    message: `Sorry, there are no images matching your search query. Please try again!`})\n }\n// 2 form Bige\n\n// const forms = document.querySelector('.form'); //  функція прослуховує на значення введене Юзером\n// forms.addEventListener('submit', handlerSabmit );\n// function handlerSabmit(event) {\n//     event.preventDefault();\n//     getImage().then((data) => console.log(data)) // експортував функцію getImage() з першого файлу pixabay-api\n// .catch(() =>  iziToast.error({title: 'Error', \n//   message: `Sorry, there are no images matching your search query. Please try again!`})\n//  )};\n\n//  export {handlerSabmit};\n\n var lightbox = new SimpleLightbox('.gallery a', { captionDelay: 250, captionsData: 'alt'  });\n\n\n// const fetchUserList = document.querySelector(\".btn\"); // creteLiMarkup - створюе розмiтку\n\n//       const listGretMarkup = creteLISTMarkup(data);\n//       fetchUserList.insertAdjacentHTML(\"beforeend\", listGretMarkup);// додає розмітку\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function cretPromis(delay, states) {\n//   return new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         if (states === 'fulfilled') {\n//           resolve(delay);\n//         } else {\n//           reject(delay);\n//         }\n//       }, delay);\n//     });\n// }\n\n// const fetchUserBtn = document.querySelector(\".btn\");\n\n\n\n// function updateBookById(update, bookId) {\n//     const options = {\n//       method: \"PATCH\",\n//       body: JSON.stringify(update),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n  \n//     return fetch(`${URL}/books/${bookId}`, options).then((res) => {\n//       if (!res.ok) {\n//         throw new Error(res.status);\n//       }\n  \n//       return res.json();\n//     });\n//   }\n//  fetch(`https://pixabay.com/api/?key=${API_KEY}&hits=q`)\n\n// .then(response => { \n//   console.log(response); // приходить вiд серверу в вигл response\n//   if (!response.ok) {\n//     throw new Error(response.status); // перев помилки 404 щоб пропустила в catch\n//   }\n//   return response.json(); // виклкикаеттся на обект ы повертае ПРОМс\n// }\n// ).then((data) => \n// {\n//   console.log(data);\n//   const listGretMarkup = creteLISTMarkup(data);\n//   fetchUserList.insertAdjacentHTML(\"beforeend\", listGretMarkup);\n// })\n// .catch((error) => console.error(\"fech error:\", error )\n// );\n\n\n","\nimport {getImage} from \"./js/pixabay-api\"\ngetImage().then((data) => console.log(data))\n\nimport {newUrl} from \"./js/render-functions\"\nnewUrl().then((dat) => console.log(dat))\n\nimport {fechPhoto} from \"./js/render-functions\"\nfechPhoto().then((dat) => console.log(dat))\n\nimport {handlerSearch} from \"./js/render-functions\"\nhandlerSearch().then((dat) => console.log(dat))\n\n// import {creatMarGallery} from \"./js/render-functions\"\n// creatMarGallery().then((dat) => console.log(dat))\n\n\n// import {handlerSabmit} from \"./js/render-functions\"\n// handlerSabmit().then((event) => console.log(event))\n"],"names":["API_KEY","getImage","response","newUrl","str","urlRaqeuestes","fechPhoto","hitss","formsImage","galleryContainer","handlerSearch","event","creatMarGallery","fechGallery","views","downloads","likes","comments","webformatURL","tags","largeImageURL","abilities","abilitiesList","image","markupHtml","error","iziToast","SimpleLightbox","data","dat"],"mappings":"6vBAcA,MAAMA,EAAU,qCAGT,SAASC,GAAW,CACzB,OAAO,MAAM,gCAAgCD,CAAO,SAAS,EAAE,KAAKE,GAAY,CAE5E,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACjB,CACL,CACK,CCCL,SAASC,EAAOC,EAAK,CAMjB,MAAMC,EAAgB,qEAA+BD,CAAG,sDAA8D,EAAU,GAChI,OAAO,MAAMC,CAAa,EAAE,KAAKH,GAAY,CAEzC,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACjB,CACP,CAAQ,CASR,SAASI,EAAUC,EAAO,CACtB,OAAO,MAAM,gCAAgCJ,EAAO,MAAM,IAAIA,EAAO,CAAC,EAAE,EAAE,KAAKD,GAAY,CAEvF,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACjB,CACP,CACA,CAIA,MAAMM,EAAa,SAAS,cAAc,mBAAmB,EACvDC,EAAmB,SAAS,cAAc,UAAU,EAC1DD,EAAW,iBAAiB,SAAUE,CAAa,EAEnD,SAASA,EAAcC,EAAO,CACvBA,EAAM,eAAc,EACPA,EAAM,cACS,SAAS,MAAM,MAAM,YAEjDL,EAAwB,EACvB,KAAKM,CAAe,EACpB,MAAMC,CAAW,CACzB,CAiBE,SAASD,EAAgB,CAAC,MAAAE,EAAO,UAAAC,EAAW,MAAAC,EAAO,SAAAC,EAAU,aAAAC,EAAc,KAAAC,EAAM,cAAAC,EAAe,UAAAC,CAAS,EAAG,CAC1G,MAAMC,EAAgBD,EACrB,IAAKE,GAAW,8BAA8BA,EAAM,KAAK,OAAS,EAChE,KAAK,EAAE,EACHC,EAAa;AAAA;AAAA,SAEf,MAAM,KAAK;AAAA,SACX,MAAM,SAAS;AAAA,SACf,MAAM,KAAK;AAAA,SACX,MAAM,QAAQ;AAAA,kCACW,MAAM,YAAY,eAAe,MAAM,QAAQ;AAAA,mCAC9C,MAAM,IAAI;AAAA;AAAA,kCAEX,MAAM,aAAa,eAAe,MAAM,QAAQ;AAAA,mCAC/C,MAAM,IAAI;AAAA;AAAA,yBAEpBF,CAAa;AAAA,QAEtCb,EAAiB,UAAYe,CAI7B,CACC,SAASX,EAAYY,EAAO,CAC3BC,EAAS,MAAM,CAAC,MAAO,QACrB,QAAS,0EAA0E,CAAC,CACtF,CAcc,IAAIC,EAAe,aAAc,CAAE,aAAc,IAAK,aAAc,MAAQ,EClI5F1B,EAAU,EAAC,KAAM2B,GAAS,QAAQ,IAAIA,CAAI,CAAC,EAG3CzB,EAAQ,EAAC,KAAM0B,GAAQ,QAAQ,IAAIA,CAAG,CAAC,EAGvCvB,EAAW,EAAC,KAAMuB,GAAQ,QAAQ,IAAIA,CAAG,CAAC,EAG1CnB,EAAe,EAAC,KAAMmB,GAAQ,QAAQ,IAAIA,CAAG,CAAC"}