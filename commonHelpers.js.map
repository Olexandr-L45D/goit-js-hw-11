{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js"],"sourcesContent":["//1 task\n// export/import:\n\n// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\n// У файлі main.js напиши всю логіку роботи додатка.\n// Список параметрів рядка запиту, які тобі обов'язково необхідно вказати:\n// key — твій унікальний ключ доступу до API.\n// q — слово для пошуку. Те, що буде вводити користувач.\n// image_type — тип зображення. Потрібні тільки фотографії, тому постав значення photo.\n// orientation — орієнтація фотографії. Постав значення horizontal.\n// safesearch — фільтр за віком. Постав значення true.\n\n// import SimpleLightbox from \"simplelightbox\";\n\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n// import iziToast from \"izitoast\";\n\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// const fetchUserBtn = document.querySelector(\".btn\");\nfunction getPictureQvery(qvery) {\n  const API_KEY = \"44760113-b733d2f51a4c6409aa3483a05\";\n  return fetch(`https://pixabay.com/api?key= ${API_KEY}&q=${qvery}`)\n.then(response => { \n  console.log(response); // приходить выд серверу в вигл обекта РЕСПОНСresponse\n  if (!response.ok) {\n    throw new Error(response.status); // перевырка в разы помилки 404 щоб пропустила в catch\n  }\n  return response.json(); // виклкикаеттся на обект ы повертае ПРОМс\n}\n);\n}\n getPictureQvery(\"blue+flowers\")\n.then((data) => console.log(data))\n.catch((error) => console.error(\"fech error:\", error ));\n\n\n\n\n\n\n// var API_KEY = '44760113-b733d2f51a4c6409aa3483a05';  // may APi згенерував в Pixaday\n// var URL = \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"images\"('red roses');\n// $.getJSON(URL, function(data){\n// if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function(i, hit){ console.log(hit.pageURL); });\n// else\n//     console.log('No hits');\n// });\n// const options = {\n// \tmethod: \"GET\"\n// };\n\n// const fetchUserBtn = document.querySelector(\".btn\");\n// fetch(\"https://pixabay.com/api/docs/images\")\n// fetch(URL)\n//   .then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   })\n//   .then(data => {\n//     // Data handling\n//     console.log(data);\n//   })\n//   .catch(error => {\n//     // Error handling\n//   });\n  \n// const fetchUsersBtn = document.querySelector(\".btn\");\n// const userList = document.querySelector(\".user-list\");\n\n// fetchUsersBtn.addEventListener(\"click\", () => {\n//   fetchUsers()\n//     .then((users) => renderUsers(users))\n//     .catch((error) => console.log(error));\n// });\n\n// function fetchUsers() {\n//   return fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n//     (response) => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     }\n//   );\n// }\n\n// function renderUsers(users) {\n//   const markup = users\n//     .map((user) => {\n//       return `<li>\n//           <p><b>Name</b>: ${user.name}</p>\n//           <p><b>Email</b>: ${user.email}</p>\n//           <p><b>Company</b>: ${user.company.name}</p>\n//         </li>`;\n//     })\n//     .join(\"\");\n//   userList.insertAdjacentHTML(\"beforeend\", markup);\n// }\n\n"],"names":["getPictureQvery","qvery","response","data","error"],"mappings":"0uBAqBA,SAASA,EAAgBC,EAAO,CAE9B,OAAO,MAAM,qEAA6CA,CAAK,EAAE,EAClE,KAAKC,GAAY,CAEhB,GADA,QAAQ,IAAIA,CAAQ,EAChB,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MAClB,CACA,CACA,CACCF,EAAgB,cAAc,EAC9B,KAAMG,GAAS,QAAQ,IAAIA,CAAI,CAAC,EAChC,MAAOC,GAAU,QAAQ,MAAM,cAAeA,CAAK,CAAE"}